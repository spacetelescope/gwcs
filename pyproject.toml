[project]
name = "gwcs"
description = "Generalized World Coordinate System"
requires-python = ">=3.9"
authors = [
    { name = "gwcs developers", email = "help@stsci.edu" },
]
dependencies = [
    "asdf >= 2.8.1",
    "astropy >= 5.3",
    "numpy",
    "scipy",
    "asdf_wcs_schemas",
    "asdf-astropy >= 0.2.0",
]
dynamic = [
    "version",
]

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.license]
file = "licenses/LICENSE.rst"
content-type = "text/x-rst"

[project.urls]
Homepage = "https://github.com/spacetelescope/gwcs"
Tracker = "https://github.com/spacetelescope/gwcs/issues"
Documentation = "https://gwcs.readthedocs.io/en/stable/"
"Source Code" = "https://github.com/spacetelescope/jwst"

[project.entry-points."asdf.extensions"]
gwcs = "gwcs.extension:get_extensions"

[project.optional-dependencies]
docs = [
    "sphinx",
    "sphinx-automodapi",
    "sphinx-rtd-theme",
    "stsci-rtd-theme",
    "sphinx-astropy",
    "sphinx-asdf",
    "tomli; python_version <'3.11'",
]
test = [
    "ci-watson>=0.3.0",
    "pytest>=4.6.0",
    "pytest-astropy",
]

[build-system]
requires = [
    "setuptools>=61.2",
    "setuptools_scm[toml]>=3.4",
    "wheel",
]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
'gwcs.tests.data' = ["*"]

[tool.setuptools.packages.find]
namespaces = false

[tool.build_sphinx]
source-dir = "docs"
build-dir = "docs/_build"
all_files = "1"

[tool.distutils.upload_docs]
upload-dir = "docs/_build/html"
show-response = 1

[tool.pytest.ini_options]
minversion = "4.6"
norecursedirs = [
    "build",
    "docs/_build",
    ".tox",
]
doctest_plus = "enabled"
addopts = "--doctest-rst"
filterwarnings = [
    "ignore:Models in math_functions:astropy.utils.exceptions.AstropyUserWarning",
    # importing astropy code causes this warning to be issued, so ignore it
    "ignore:numpy.ndarray size changed:RuntimeWarning",
]

[tool.coverage.run]
omit = [
    "gwcs/tests/test_*",
    "gwcs/tags/tests/test_*",
    "*/gwcs/tests/test_*",
    "*/gwcs/tags/tests/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "except ImportError",
    "raise AssertionError",
    "raise NotImplementedError",
    "def main\\(.*\\):",
    "pragma: py{ignore_python_version}",
]

[tool.setuptools_scm]
